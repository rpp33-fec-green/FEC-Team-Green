{"version":3,"file":"839.bundle.js","mappings":"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","sources":["webpack://fec-team-green/./client/src/qa/styles/modal.css?e782","webpack://fec-team-green/./client/src/qa/components/Modal.jsx","webpack://fec-team-green/./client/src/qa/components/AddAnswerDashboard.jsx","webpack://fec-team-green/./client/src/qa/components/AnswerPhoto.jsx","webpack://fec-team-green/./client/src/qa/components/AnswerPhotosList.jsx","webpack://fec-team-green/./client/src/qa/components/IndividualAnswer.jsx","webpack://fec-team-green/./client/src/qa/components/AnswersList.jsx","webpack://fec-team-green/./client/src/qa/components/IndividualQuestion.jsx","webpack://fec-team-green/./client/src/qa/components/QuestionsList.jsx","webpack://fec-team-green/./client/src/qa/styles/modal.css"],"sourcesContent":["\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./modal.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./modal.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport '../styles/modal.css';\n\nconst Modal = ({ handleClose, show, children }) => {\n  const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n\n  return (\n    <div className={showHideClassName}>\n      <section className=\"modal-main\">\n        <button className=\"modal-button-close\" type=\"button\" onClick={handleClose}>\n          X\n        </button>\n        {children}\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './Modal.jsx';\nimport axios from 'axios';\n\nconst AddAnswerDashboard = (props) => {\n  // props: product_name, question_body, question_id\n  const [show, setShow] = useState(false);\n  const [answer, setAnswer] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [email, setEmail] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [canUpload, setCanUpload] = useState(true);\n  const [photoErrorMsg, setPhotoErrorMsg] = useState('');\n  const [postErrorMsg, setPostErrorMsg] = useState('');\n  \n  useEffect(() => {\n    if (photos.length >= 5) {\n      setCanUpload(false);\n    }\n  });\n  \n  const handlePhotoUpload = function (event) {\n    // get just the file info\n    const file = event.target.files[0];\n    \n    // to create readable \"multipart/form-data\" streams\n    let data = new FormData();\n    data.append('photo', file);\n    // console.log('SEE FORM DATA', data.get('photo'));\n    \n    axios.post('/photos', data, {\n      headers: {\n        'content-type': 'multipart/form-data' \n      }\n    })\n      .then((response) => {\n        setPhotos(oldPhotos => [...oldPhotos, response.data]);\n        setPhotoErrorMsg('');\n      })\n      .catch((error) => {\n        setPhotoErrorMsg('photo unable to be uploaded');\n      });\n  };\n\n  const showModal = () => {\n    setShow(true);\n  };\n\n  const hideModal = () => {\n    setShow(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    var errors = [];\n    // check if mandatory fields are empty\n    if (answer === '') {\n      errors.push('your answer');\n    }\n\n    if (nickname === '') {\n      errors.push('your nickname');\n    }\n\n    if (email === '') {\n      errors.push('your email');\n    } else {\n      // check for corret email format\n      let isCorrectEmail = true;\n      const atSplit = email.split('@');\n\n      if (atSplit.length !== 2) {\n        isCorrectEmail = false;\n      } else {\n        const dotSplit = atSplit[1].split('.');\n        if (dotSplit.length !== 2) {\n          isCorrectEmail = false;\n        }\n      }\n\n      if (!isCorrectEmail) {\n        errors.push('a valid email address format');\n      }\n    }\n\n    // if there are errors, create errorText and update errorMsg \n    if (errors.length > 0) {\n      let errorText = '';\n\n      // proper grammar for lists\n      if (errors.length === 1) {\n        errorText = `${errors[0]}.`;\n      } else if (errors.length === 2) {\n        errorText = `${errors[0]} and ${errors[1]}.`;\n      } else {\n        for (let i = 0; i < errors.length; i++) {\n          // if on the last element\n          if (i === errors.length - 1) {\n            errorText += `and ${errors[i]}.`;\n          } else {\n            errorText += `${errors[i]}, `;\n          }\n        }\n      }\n\n      setErrorMsg(errorText);\n    } else {\n      // submission form has been validated succesfully! \n      const bodyParams = {\n        body: answer,\n        name: nickname,\n        email: email,\n        photos: photos\n      };\n\n      console.log('bodyParams', bodyParams);\n      console.log('questionId', props.question_id);\n      axios.post(`/api/qa/questions/${props.question_id}/answers`, bodyParams)\n        .then((response) => {\n          setShow(false);\n        })\n        .catch((error) => {\n          setPostErrorMsg('error in submitting your answer - please try again later');\n        });\n    }\n  };\n\n  return (\n    <>\n      <Modal show={show} handleClose={hideModal}>\n        <h1>Submit Your Answer</h1>\n        <h2>{props.product_name}: <span className=\"modal-subtitle\">{props.question_body}</span></h2>\n        {errorMsg === '' || <p className=\"modal-error-msg\">*You must enter the following: {errorMsg}</p>}\n        {postErrorMsg === '' || <p className=\"modal-error-msg\">{postErrorMsg}</p>}\n        <form className=\"answer-form\" onSubmit={handleSubmit}>\n          <label>\n            Your Answer*\n            <textarea maxLength=\"1000\" value={answer} onChange={(e) => setAnswer(e.target.value)} />\n          </label>\n          <label>\n            What is your nickname?*\n            <input type=\"text\" maxLength=\"60\" placeholder=\"Example: jack543!\"\n              value={nickname} onChange={(e) => setNickname(e.target.value)} />\n            <p className=\"form-extra-info\">For privacy reasons, do not use your full name or email address</p>\n          </label>\n          <label>\n            Your email*\n            <input type=\"text\" maxLength=\"60\" placeholder=\"Example: jack@email.com\"\n              value={email} onChange={(e) => setEmail(e.target.value)} />\n            <p className=\"form-extra-info\">For authentication reasons, you will not be emailed</p>\n          </label>\n          <label>\n            Upload your photos\n            {!canUpload || <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" onChange={handlePhotoUpload} onClick={(e) => e.stopPropagation()} />}\n            {photoErrorMsg === '' || <p className=\"modal-error-msg\">*You must enter the following: {photoErrorMsg}</p>}\n            <div className=\"add-answer-uploads-container\">\n              {\n                photos.map(photo => (\n                  <img src={photo} key={photo} className=\"add-answer-photo\" />\n                ))\n              }\n            </div>\n          </label>\n          <input className=\"modal-button-submit\" type=\"submit\" value=\"Submit\" onClick={(e) => e.stopPropagation()} />\n        </form>\n      </Modal>\n      <a href='#' onClick={showModal}>Add Answer</a>\n    </>\n  );\n};\n\nexport default AddAnswerDashboard;","import React, { useState } from 'react';\nimport Modal from './Modal.jsx';\n\nconst AnswerPhoto = (props) => {\n  const [show, setShow] = useState(false);\n\n  const showModal = () => {\n    setShow(true);\n  };\n\n  const hideModal = () => {\n    setShow(false);\n  };\n\n\n  return (\n    <>\n      <Modal show={show} handleClose={hideModal}>\n        <img className=\"answer-photo\"\n          src={props.url}\n          alt={`photo upload by ${props.answerer_name}`} />\n      </Modal>\n      <img className=\"answer-photo-thumbnail\"\n        src={props.url}\n        alt={`photo upload by ${props.answerer_name}`}\n        onClick={showModal} />\n    </>\n  );\n};\n\nexport default AnswerPhoto;","import React from 'react';\nimport AnswerPhoto from './AnswerPhoto.jsx';\n\n\nconst AnswerPhotosList = (props) => {\n  // props: photos (from IndividualAnswer)\n  const photos = props.photos.map((photo) =>\n    <AnswerPhoto\n      key={photo.id}\n      url={photo.url}\n      answerer_name={props.answerer_name} />\n  );\n\n  // render: maps to AnswerPhoto\n  return (\n    <div className=\"answer-photos-container\">\n      {photos}\n    </div>\n  );\n};\n\nexport default AnswerPhotosList;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AnswerPhotosList from './AnswerPhotosList.jsx';\n\nconst IndividualAnswer = (props) => { \n  // props\n  // answer (from AnswersList)\n\n  const [isHelpfulClickedA, setIsHelpfulClickedA] = useState(false); \n  const [helpfulCountA, setHelpfulCountA] = useState(props.answer.helpfulness);  \n  const [reportText, setReportText] = useState('Report');\n  const [isReportClicked, setIsReportClicked] = useState(false);\n\n  // methods\n  // handleHelpfulClick - request to \"mark answer as helpful\" endpoint \n  const handleHelpfulClick = (event) => {\n    event.preventDefault();\n    if (!isHelpfulClickedA) {\n      axios.put(`/api/qa/answers/${props.answer.answer_id}/helpful`)\n        .then((response) => {\n          setHelpfulCountA(helpfulCountA + 1);\n          setIsHelpfulClickedA(true);\n        })\n        .catch((error) => {\n          alert('Answer: Helpful Link Already Clicked!');\n        });\n    } else {\n      alert('Answer: Helpful Link Already Clicked');\n    }\n  };\n\n  // handleReportClick - request to \"report answer\" endpoint\n  const handleReportClick = (event) => {\n    event.preventDefault();\n    if (!isReportClicked) {\n      axios.put(`api/qa/answers/${props.answer.answer_id}/report`)\n        .then((response) => {\n          setIsReportClicked(true);\n          setReportText('Reported');\n        })\n        .catch((error) => {\n          alert('Answer Already Reported');\n        });\n    } else {\n      alert('Answer Already Reported');\n    }\n  };\n\n  // date formatter\n  const formatDate = () => {\n    // implementation credit: Wen \n    // use Date constructor \n    const date = new Date(props.answer.date);\n    // access the toLocaleString method to format the date based on BRD requirements\n    return date.toLocaleString('en-US', {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  };\n  \n  return (\n    <div className=\"answer\" role=\"answer\">\n      <p className=\"answer-text\"><span id=\"answer-letter\">A:&nbsp;&nbsp;</span>{props.answer.body}</p>\n      <AnswerPhotosList photos={props.answer.photos} answerer_name={props.answer.answerer_name} />\n      <footer className=\"answerData-helpfulA-reportLink\">by {props.answer.answerer_name}, {formatDate()}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Helpful? <a href=\"/\" onClick={handleHelpfulClick}>Yes</a> ({helpfulCountA})&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<a href=\"/\" onClick={handleReportClick}>{reportText}</a></footer>\n    </div>\n  );\n};\n\nexport default IndividualAnswer;","import React, { useState, useEffect } from 'react';\nimport IndividualAnswer from './IndividualAnswer.jsx';\n\nconst AnswersList = (props) => {\n  // props: answers (from IndividualQuestion)\n  const answers = props.answers.map((answer) =>\n    <IndividualAnswer\n      key={answer.answer_id}\n      answer={answer} />\n  );\n\n  // render: maps to IndividualAnswer\n  return (\n    <div className=\"answers-container\">\n      <div className=\"answers-list\" role=\"answers-list\">\n        {answers}\n      </div>\n    </div>\n  );\n};\n\nexport default AnswersList;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AddAnswerDashboard from './AddAnswerDashboard.jsx';\nimport AnswersList from './AnswersList.jsx';\n\n\nconst IndividualQuestion = (props) => {\n  // props: question, product name (pass to AddAnswerDashboard)\n\n  const [answers, setAnswers] = useState([]);\n  const [countA, setCountA] = useState(2);\n  const [moreAnsButtonVisible, setMoreAnsButtonVisible] = useState(false);\n  const [isHelpfulClickedQ, setIsHelpfulClickedQ] = useState(false);\n  const [helpfulCountQ, setHelpfulCountQ] = useState(props.question.question_helpfulness);\n  const [moreAnsButtonText, setMoreAnsButtonText] = useState('LOAD MORE ANSWERS');\n\n  // getAllAnswers/useEffect\n  useEffect(() => {\n    const count = 20; // start with a high number to avoid too many calls to the API\n    let page = 1;\n    let answers = [];\n    // inner function that keeps calling until length of data is less than the count\n    const getAllAnswers = () => {\n      axios.get(`/api/qa/questions/${props.question.question_id}/answers?count=${count}&page=${page}`)\n        .then((response) => {\n          answers = answers.concat(response.data.results);\n          if (response.data.results.length === count) { // there are still more answers\n            page++; // increment page to get more answers\n            getAllAnswers();\n          } else { // length is less than count so all answers have been retrieved\n            // loop over all answers\n            for (let i = 0; i < answers.length; i++) {\n              // if the current element's answerer_name is Seller\n              if (answers[i].answerer_name === 'Seller') {\n                // save seller answer data\n                let seller = answers[i];\n                // remove from current position\n                answers.splice(i, 1);\n                // unshift to front of array\n                answers.unshift(seller);\n              }\n            }\n            setAnswers(answers);\n            return;\n          }\n        })\n        .catch((error) => {\n          alert('ERROR IN getAllAnswers', error);\n        });\n    };\n    // invoke the recursive inner function\n    getAllAnswers();\n  }, []); // the empty array stops the effect from running more than once\n\n  // isMoreAnsButtonVisible - checks if there are more than 2 answers total; if yes, button is visible (true)\n  useEffect(() => {\n    if (answers.length > 2) {\n      setMoreAnsButtonVisible(true);\n    } else {\n      setMoreAnsButtonVisible(false);\n    }\n  });\n\n  // handleMoreAnsClick - changes countA and button text \n  const handleMoreAnsClick = (event) => {\n    event.preventDefault();\n    if (moreAnsButtonText === 'LOAD MORE ANSWERS') {\n      // change countA to all the answers\n      const fullList = answers.length;\n      setCountA(fullList);\n      // change button text to allow view to just 2 answers\n      setMoreAnsButtonText('COLLAPSE ANSWERS');\n    } else {\n      // revert back to only 2 answers\n      setCountA(2);\n      // change button text to allow view of all answers if clicked\n      setMoreAnsButtonText('LOAD MORE ANSWERS');\n    }\n  };\n\n  // handleHelpfulClick - if isHelpfulClicked is false: request to \"mark question as helpful\" endpoint, isHelpfulClicked to true \n  const handleHelpfulClick = (event) => {\n    event.preventDefault();\n    if (!isHelpfulClickedQ) {\n      axios.put(`/api/qa/questions/${props.question.question_id}/helpful`)\n        .then((response) => {\n          setHelpfulCountQ(helpfulCountQ + 1);\n          setIsHelpfulClickedQ(true);\n        })\n        .catch((error) => {\n          alert('Question: Helpful Link Already Clicked');\n        });\n    } else {\n      alert('Question: Helpful Link Already Clicked');\n    }\n  };\n\n  // handle AddAnswerLinkClick ***** TODO *****\n\n  // AddAnswerLink - state: AddAnswerLinkClick ***** TODO *****\n  return (\n    <div className=\"question\" role=\"question\">\n      <div className=\"question-row\">\n        <p className=\"question-text\">Q:&nbsp;&nbsp;{props.question.question_body}</p>\n        <aside className=\"helpfulQ-addAnswerLink\">Helpful? <a href='/' onClick={handleHelpfulClick}>Yes</a> ({helpfulCountQ})&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<AddAnswerDashboard product_name={props.product_name} question_id={props.question.question_id} question_body={props.question.question_body} /></aside>\n      </div>\n      <AnswersList answers={answers.slice(0, countA)} />\n      <div className=\"moreAnswers-option\">\n        {moreAnsButtonVisible ? <button id=\"moreAnswers-button\" onClick={handleMoreAnsClick}>{moreAnsButtonText}</button> : null}\n      </div>\n    </div>\n  );\n\n};\n\nexport default IndividualQuestion;","import React, { useState, useEffect } from 'react';\nimport IndividualQuestion from './IndividualQuestion.jsx';\n\nconst QuestionsList = (props) => {\n  // props: filteredQues (from QA)\n  const questions = props.questions.map((question) => \n    <IndividualQuestion\n      key={question.question_id}\n      question={question}\n      product_name={props.product_name}/>\n  );\n  \n  // render: maps to IndividualQuestion\n  return (\n    <div className=\"questions-list\" role=\"questions-list\">\n      {questions}\n    </div>\n  );\n};\n\nexport default QuestionsList;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".modal {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background: rgba(0, 0, 0, 0.6);\\n  overflow: scroll;\\n}\\n\\n.modal-main {\\n  position: absolute;\\n  background: white;\\n  width: 80%;\\n  height: 550px;\\n  max-height: 100%;\\n  top: 300px;\\n  left: 50%;\\n  transform: translate(-50%,-50%);\\n  padding: 20px;\\n  overflow: scroll;\\n  text-align: left;\\n}\\n\\n.display-block {\\n  display: block;\\n}\\n\\n.display-none {\\n  display: none;\\n}\\n\\n.question-form {\\n  margin-top: 10px;\\n  display: grid;\\n  grid-template-rows: repeat(3, 1fr) 50px;\\n}\\n\\n.question-form label {\\n  padding: 10px;\\n  font-size: 16px;\\n}\\n\\n.modal-button-submit {\\n  padding: 10px;\\n  margin: 8px;\\n  font-size: 16px;\\n  color: black;\\n}\\n\\n.modal-button-close {\\n  padding: 10px;\\n  margin: 8px;\\n  float: right;\\n}\\n\\n.question-form input {\\n  width: 90%;\\n  padding: 6px 10px;\\n  margin: 8px 8px;\\n  box-sizing: border-box;\\n  border: 3px solid #ccc;\\n  transition: 0.5s;\\n  outline: none;\\n}\\n\\n.question-form input:focus {\\n  border: 3px solid #39FF14;\\n}\\n\\n.question-form textarea {\\n  width: 90%;\\n  height: 70px;\\n  padding: 6px 10px;\\n  margin: 8px 8px;\\n  box-sizing: border-box;\\n  border: 3px solid #ccc;\\n  transition: 0.5s;\\n  outline: none;\\n  resize: none;\\n}\\n\\n.question-form textarea:focus {\\n  border: 3px solid #39FF14;\\n}\\n\\n.modal-error-msg {\\n  color: red;\\n  font-size: 16px;\\n  font-style: italic;\\n  font-weight: 100;\\n}\\n\\n.modal-main h1 {\\n  font-size: 22px;\\n  font-weight: 100;\\n  padding-bottom: 10px;\\n}\\n\\n.modal-main h2 {\\n  font-size: 18px;\\n}\\n\\n.modal-subtitle {\\n  font-style: italic\\n}\\n\\n/* ANSWER FORM STYLING */\\n.answer-form {\\n  margin-top: 10px;\\n  display: grid;\\n  grid-template-rows: repeat(3, 1fr) auto 50px;\\n}\\n\\n.answer-form label {\\n  padding: 10px;\\n  font-size: 16px;\\n  font-weight: normal;\\n}\\n\\n.answer-form input {\\n  width: 90%;\\n  padding: 6px 10px;\\n  margin: 8px 8px;\\n  box-sizing: border-box;\\n  border: 3px solid #ccc;\\n  transition: 0.5s;\\n  outline: none;\\n}\\n\\n.answer-form input:focus {\\n  border: 3px solid #39FF14;\\n}\\n\\n.answer-form textarea {\\n  width: 90%;\\n  height: 70px;\\n  padding: 6px 10px;\\n  margin: 8px 8px;\\n  box-sizing: border-box;\\n  border: 3px solid #ccc;\\n  transition: 0.5s;\\n  outline: none;\\n  resize: none;\\n}\\n\\n.answer-form textarea:focus {\\n  border: 3px solid #39FF14;\\n}\\n\\n.form-extra-info {\\n  font-size: 14px;\\n  font-style: italic;\\n  font-weight: 100;\\n}\\n\\n.add-answer-uploads-container {\\n  display: grid;\\n  grid-template-columns: repeat(5, 1fr);\\n}\\n\\n.add-answer-photo {\\n  width: 60px;\\n  height: 60px;\\n  padding: 10px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./client/src/qa/styles/modal.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe;EACf,MAAM;EACN,OAAO;EACP,WAAW;EACX,YAAY;EACZ,8BAA8B;EAC9B,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,UAAU;EACV,aAAa;EACb,gBAAgB;EAChB,UAAU;EACV,SAAS;EACT,+BAA+B;EAC/B,aAAa;EACb,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,uCAAuC;AACzC;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,eAAe;EACf,YAAY;AACd;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;AACd;;AAEA;EACE,UAAU;EACV,iBAAiB;EACjB,eAAe;EACf,sBAAsB;EACtB,sBAAsB;EACtB,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,iBAAiB;EACjB,eAAe;EACf,sBAAsB;EACtB,sBAAsB;EACtB,gBAAgB;EAChB,aAAa;EACb,YAAY;AACd;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,UAAU;EACV,eAAe;EACf,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,oBAAoB;AACtB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE;AACF;;AAEA,wBAAwB;AACxB;EACE,gBAAgB;EAChB,aAAa;EACb,4CAA4C;AAC9C;;AAEA;EACE,aAAa;EACb,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,iBAAiB;EACjB,eAAe;EACf,sBAAsB;EACtB,sBAAsB;EACtB,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,iBAAiB;EACjB,eAAe;EACf,sBAAsB;EACtB,sBAAsB;EACtB,gBAAgB;EAChB,aAAa;EACb,YAAY;AACd;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,qCAAqC;AACvC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;AACf\",\"sourcesContent\":[\".modal {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background: rgba(0, 0, 0, 0.6);\\n  overflow: scroll;\\n}\\n\\n.modal-main {\\n  position: absolute;\\n  background: white;\\n  width: 80%;\\n  height: 550px;\\n  max-height: 100%;\\n  top: 300px;\\n  left: 50%;\\n  transform: translate(-50%,-50%);\\n  padding: 20px;\\n  overflow: scroll;\\n  text-align: left;\\n}\\n\\n.display-block {\\n  display: block;\\n}\\n\\n.display-none {\\n  display: none;\\n}\\n\\n.question-form {\\n  margin-top: 10px;\\n  display: grid;\\n  grid-template-rows: repeat(3, 1fr) 50px;\\n}\\n\\n.question-form label {\\n  padding: 10px;\\n  font-size: 16px;\\n}\\n\\n.modal-button-submit {\\n  padding: 10px;\\n  margin: 8px;\\n  font-size: 16px;\\n  color: black;\\n}\\n\\n.modal-button-close {\\n  padding: 10px;\\n  margin: 8px;\\n  float: right;\\n}\\n\\n.question-form input {\\n  width: 90%;\\n  padding: 6px 10px;\\n  margin: 8px 8px;\\n  box-sizing: border-box;\\n  border: 3px solid #ccc;\\n  transition: 0.5s;\\n  outline: none;\\n}\\n\\n.question-form input:focus {\\n  border: 3px solid #39FF14;\\n}\\n\\n.question-form textarea {\\n  width: 90%;\\n  height: 70px;\\n  padding: 6px 10px;\\n  margin: 8px 8px;\\n  box-sizing: border-box;\\n  border: 3px solid #ccc;\\n  transition: 0.5s;\\n  outline: none;\\n  resize: none;\\n}\\n\\n.question-form textarea:focus {\\n  border: 3px solid #39FF14;\\n}\\n\\n.modal-error-msg {\\n  color: red;\\n  font-size: 16px;\\n  font-style: italic;\\n  font-weight: 100;\\n}\\n\\n.modal-main h1 {\\n  font-size: 22px;\\n  font-weight: 100;\\n  padding-bottom: 10px;\\n}\\n\\n.modal-main h2 {\\n  font-size: 18px;\\n}\\n\\n.modal-subtitle {\\n  font-style: italic\\n}\\n\\n/* ANSWER FORM STYLING */\\n.answer-form {\\n  margin-top: 10px;\\n  display: grid;\\n  grid-template-rows: repeat(3, 1fr) auto 50px;\\n}\\n\\n.answer-form label {\\n  padding: 10px;\\n  font-size: 16px;\\n  font-weight: normal;\\n}\\n\\n.answer-form input {\\n  width: 90%;\\n  padding: 6px 10px;\\n  margin: 8px 8px;\\n  box-sizing: border-box;\\n  border: 3px solid #ccc;\\n  transition: 0.5s;\\n  outline: none;\\n}\\n\\n.answer-form input:focus {\\n  border: 3px solid #39FF14;\\n}\\n\\n.answer-form textarea {\\n  width: 90%;\\n  height: 70px;\\n  padding: 6px 10px;\\n  margin: 8px 8px;\\n  box-sizing: border-box;\\n  border: 3px solid #ccc;\\n  transition: 0.5s;\\n  outline: none;\\n  resize: none;\\n}\\n\\n.answer-form textarea:focus {\\n  border: 3px solid #39FF14;\\n}\\n\\n.form-extra-info {\\n  font-size: 14px;\\n  font-style: italic;\\n  font-weight: 100;\\n}\\n\\n.add-answer-uploads-container {\\n  display: grid;\\n  grid-template-columns: repeat(5, 1fr);\\n}\\n\\n.add-answer-photo {\\n  width: 60px;\\n  height: 60px;\\n  padding: 10px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","handleClose","show","children","showHideClassName","className","type","onClick","props","useState","setShow","answer","setAnswer","nickname","setNickname","email","setEmail","photos","setPhotos","errorMsg","setErrorMsg","canUpload","setCanUpload","photoErrorMsg","setPhotoErrorMsg","postErrorMsg","setPostErrorMsg","useEffect","length","Modal","product_name","question_body","onSubmit","event","preventDefault","errors","push","isCorrectEmail","atSplit","split","errorText","i","bodyParams","body","name","console","log","question_id","axios","then","response","error","maxLength","value","onChange","e","target","placeholder","id","accept","file","files","data","FormData","append","headers","oldPhotos","stopPropagation","map","photo","src","key","href","url","alt","answerer_name","isHelpfulClickedA","setIsHelpfulClickedA","helpfulness","helpfulCountA","setHelpfulCountA","reportText","setReportText","isReportClicked","setIsReportClicked","role","Date","date","toLocaleString","month","day","year","alert","answer_id","answers","setAnswers","countA","setCountA","moreAnsButtonVisible","setMoreAnsButtonVisible","isHelpfulClickedQ","setIsHelpfulClickedQ","question","question_helpfulness","helpfulCountQ","setHelpfulCountQ","moreAnsButtonText","setMoreAnsButtonText","page","getAllAnswers","concat","results","seller","splice","unshift","slice","fullList","questions","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}